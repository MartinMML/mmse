package com.mmse.insurance.view;

import java.util.Set;

import javax.swing.BoxLayout;
import javax.swing.JFrame;
import javax.swing.JPanel;

import com.mmse.insurance.control.Controller;
import com.mmse.insurance.model.entities.Claim;
import com.mmse.insurance.model.entities.Customer;
import static com.mmse.insurance.model.entities.Role.CarDept;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;

/**
 *
 * @author Adam
 */
@SuppressWarnings("serial")
public class MainView extends javax.swing.JFrame {
    Controller controller;
    ClaimsViewForm claimForm;
    CustomerViewForm customerForm;
    /**
     * Creates new form mainView
     */
    public MainView(Controller controller) {
        this.controller = controller;
        initComponents();
        getContentPane().setLayout(
            new BoxLayout(getContentPane(), BoxLayout.PAGE_AXIS)
        );
        claimForm = new ClaimsViewForm(controller);
        customerForm = new CustomerViewForm(controller);
        
        
        this.getContentPane().add(new JLabel("Claims"));
        this.getContentPane().add(claimForm);
        this.getContentPane().add(new JLabel("Customers"));
        this.getContentPane().add(customerForm);
        this.pack();
        this.setVisible(true);
        enableButtonsBasedOnRole();
        refreshUser();
                
    }
    
    void enableButtonsBasedOnRole() {
        switch (controller.getModel().getAuthenticatedRole()) {
            case CarDept:
                assesClaimButton.setEnabled(false);
                addClaimButton.setEnabled(true);
                addCustomerButton.setEnabled(true);
                break;
            case ClaimHandlerA:
            case ClaimHandlerB:                
                assesClaimButton.setEnabled(true);
                addClaimButton.setEnabled(true);
                addCustomerButton.setEnabled(true);
                break;
            case FinanceDept:                
                assesClaimButton.setEnabled(false);
                addClaimButton.setEnabled(false);
                addCustomerButton.setEnabled(false);
                break;
            default:
                break;

        }
    }
    
    void refreshUser(){
        loginState.setText(controller.getModel().getAuthenticatedUser().toString());
    }

    public void refresh(){
        refreshUser();
        claimForm.refresh();
        customerForm.refresh();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem3 = new javax.swing.JMenuItem();
        loginState = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        addClaimButton = new javax.swing.JMenuItem();
        addCustomerButton = new javax.swing.JMenuItem();
        assesClaimButton = new javax.swing.JMenuItem();

        jMenuItem3.setText("jMenuItem3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jButton1.setText("Reset");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        addClaimButton.setText("Add claim");
        addClaimButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addClaimButtonActionPerformed(evt);
            }
        });
        jMenu2.add(addClaimButton);

        addCustomerButton.setText("Add/Select customer");
        addCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomerButtonActionPerformed(evt);
            }
        });
        jMenu2.add(addCustomerButton);

        assesClaimButton.setText("Asses claim severeness");
        assesClaimButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assesClaimButtonActionPerformed(evt);
            }
        });
        jMenu2.add(assesClaimButton);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 545, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(loginState, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(79, 79, 79))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(20, 20, 20))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(loginState, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 314, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addClaimButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addClaimButtonActionPerformed
        JFrame frame = new JFrame("Add new Claim");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        JPanel contentPane = new ClaimInputForm(controller);
        frame.setContentPane(contentPane);
        frame.pack();   
        frame.setLocationByPlatform(true);
        frame.setVisible(true);
    }//GEN-LAST:event_addClaimButtonActionPerformed

    private void assesClaimButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assesClaimButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_assesClaimButtonActionPerformed

    private void addCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomerButtonActionPerformed
         JFrame frame = new JFrame("Add new Customer");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        JPanel contentPane = new CustomerInputForm(controller);
        frame.setContentPane(contentPane);
        frame.pack();   
        frame.setLocationByPlatform(true);
        frame.setVisible(true);
    }//GEN-LAST:event_addCustomerButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        controller.resetView();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        controller.applicationClosing();
    }//GEN-LAST:event_formWindowClosing

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem addClaimButton;
    private javax.swing.JMenuItem addCustomerButton;
    private javax.swing.JMenuItem assesClaimButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JLabel loginState;
    // End of variables declaration//GEN-END:variables

    public void setClaims(Set<Claim> claimsByCustomer) {
        claimForm.setClaims(claimsByCustomer);
    }
    
    public boolean acceptanceTestAddCustomer(Customer customer){
        JFrame frame = new JFrame("Add new Customer");
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        JPanel contentPane = new CustomerInputForm(controller);
        frame.setContentPane(contentPane);
        frame.pack();   
        frame.setLocationByPlatform(true);
        frame.setVisible(true);
        ((CustomerInputForm)contentPane).performAcceptanceTestAddClient(customer);
        
        boolean result =  customerForm.acceptanceTestAddCustomerTest(customer);
        //sleep to see the result
        try {
            Thread.sleep(2000);
        } catch (InterruptedException ex) {
            Logger.getLogger(MainView.class.getName()).log(Level.SEVERE, null, ex);
        }
        controller.getModel().getDb().deleteCustomer(customer);
        
        return result;
        
        
    }
    
    
    public boolean acceptanceTestAddClaim(Claim claim){
        JFrame frame = new JFrame("Add new Claim");
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        JPanel contentPane = new ClaimInputForm(controller);
        frame.setContentPane(contentPane);
        frame.pack();   
        frame.setLocationByPlatform(true);
        frame.setVisible(true);
        
        ((ClaimInputForm)contentPane).handleAddClaimAcceptanceTest(claim);
        
        boolean result =  claimForm.acceptanceTestAddClaimTest(claim);
        //sleep to see the result
        try {
            Thread.sleep(2000);
        } catch (InterruptedException ex) {
            Logger.getLogger(MainView.class.getName()).log(Level.SEVERE, null, ex);
        }
        controller.getModel().getDb().deleteClaim(claim);
        
        return result;
        
        
    }
}
